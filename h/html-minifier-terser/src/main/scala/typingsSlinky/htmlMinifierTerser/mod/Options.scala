package typingsSlinky.htmlMinifierTerser.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Most of the options are disabled by default
  */
@js.native
trait Options extends js.Object {
  /**
    * Treat attributes in case sensitive manner (useful for custom HTML tags)
    * @default false
    */
  var caseSensitive: js.UndefOr[Boolean] = js.native
  /**
    * Omit attribute values from boolean attributes
    * @default false
    */
  var collapseBooleanAttributes: js.UndefOr[Boolean] = js.native
  /**
    * Don't leave any spaces between display:inline;
    * elements when collapsing. Must be used in conjunction with collapseWhitespace=true
    * @default false
    */
  var collapseInlineTagWhitespace: js.UndefOr[Boolean] = js.native
  /**
    * Collapse white space that contributes to text nodes in a document tree
    * @default false
    */
  var collapseWhitespace: js.UndefOr[Boolean] = js.native
  /**
    * Always collapse to 1 space (never remove it entirely). Must be used in conjunction with `collapseWhitespace=true`
    * @default false
    */
  var conservativeCollapse: js.UndefOr[Boolean] = js.native
  /**
    * Handle parse errors
    * @default false
    */
  var continueOnParseError: js.UndefOr[Boolean] = js.native
  /**
    * Arrays of regex'es that allow to support custom attribute assign expressions (e.g. `'<div flex?="{{mode != cover}}"></div>'`)
    * @default []
    */
  var customAttrAssign: js.UndefOr[js.Array[js.RegExp]] = js.native
  /**
    * Regex that specifies custom attribute to strip newlines from (e.g. `/ng-class/`
    */
  var customAttrCollapse: js.UndefOr[js.RegExp] = js.native
  /**
    * Arrays of regex'es that allow to support custom attribute surround expressions (e.g. `<input {{#if value}}checked="checked"{{/if}}>`)
    * @default []
    */
  var customAttrSurround: js.UndefOr[js.Array[js.RegExp]] = js.native
  /**
    * Arrays of regex'es that allow to support custom event attributes for `minifyJS` (e.g. `ng-click`)
    * @default [/^on[a-z]{3,}$/]
    */
  var customEventAttributes: js.UndefOr[js.Array[js.RegExp]] = js.native
  /**
    * Use direct Unicode characters whenever possible
    * @default false
    */
  var decodeEntities: js.UndefOr[Boolean] = js.native
  /**
    * Parse input according to HTML5 specifications
    * @default true
    */
  var html5: js.UndefOr[Boolean] = js.native
  /**
    * Array of regex'es that allow to ignore certain comments, when matched
    * @default [/^!/]
    */
  var ignoreCustomComments: js.UndefOr[js.Array[js.RegExp]] = js.native
  /**
    * Array of regex'es that allow to ignore certain fragments, when matched (e.g. `<?php ... ?>`, `{{ ... }}`, etc.)
    * @default [/<%[\s\S]*?%>/, /<\?[\s\S]\*?\?>/]
    */
  var ignoreCustomFragments: js.UndefOr[js.Array[js.RegExp]] = js.native
  /**
    * Insert tags generated by HTML parser
    * @default true
    */
  var includeAutoGeneratedTags: js.UndefOr[Boolean] = js.native
  /**
    * Keep the trailing slash on singleton elements
    * @default false
    */
  var keepClosingSlash: js.UndefOr[Boolean] = js.native
  /**
    * Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points
    */
  var maxLineLength: js.UndefOr[Double] = js.native
  /**
    * Minify CSS in style elements and style attributes
    * @default false
    */
  var minifyCSS: js.UndefOr[
    Boolean | js.Object | (js.Function2[/* text */ String, /* type */ js.UndefOr[String], String])
  ] = js.native
  /**
    * Minify JavaScript in script elements and event attributes
    * @default false
    */
  var minifyJS: js.UndefOr[
    Boolean | js.Object | (js.Function2[/* text */ String, /* inline */ js.UndefOr[Boolean], String])
  ] = js.native
  /**
    * Minify URLs in various attributes
    * @default false
    */
  var minifyURLs: js.UndefOr[Boolean | String | js.Object | (js.Function1[/* text */ String, String])] = js.native
  /**
    * Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break.
    * Must be used in conjunction with `collapseWhitespace=true`
    * @default false
    */
  var preserveLineBreaks: js.UndefOr[Boolean] = js.native
  /**
    * Prevents the escaping of the values of attributes
    * @default false
    */
  var preventAttributesEscaping: js.UndefOr[Boolean] = js.native
  /**
    * Process contents of conditional comments through minifier
    * @default false
    */
  var processConditionalComments: js.UndefOr[Boolean] = js.native
  /**
    * Array of strings corresponding to types of script elements to process through minifier
    * (e.g. `text/ng-template`, `text/x-handlebars-template`, etc.)
    * @default []
    */
  var processScripts: js.UndefOr[js.Array[String]] = js.native
  /**
    * Type of quote to use for attribute values (' or ")
    */
  var quoteCharacter: js.UndefOr[String] = js.native
  /**
    * Remove quotes around attributes when possible
    * @default false
    */
  var removeAttributeQuotes: js.UndefOr[Boolean] = js.native
  /**
    * Strip HTML comments
    * @default false
    */
  var removeComments: js.UndefOr[Boolean] = js.native
  /**
    * Remove all attributes with whitespace-only values
    * @default false
    */
  var removeEmptyAttributes: js.UndefOr[Boolean | (js.Function2[/* attrName */ String, /* tag */ String, Boolean])] = js.native
  /**
    * Remove all elements with empty contents
    * @default false
    */
  var removeEmptyElements: js.UndefOr[Boolean] = js.native
  /**
    * Remove optional tags
    * @default false
    */
  var removeOptionalTags: js.UndefOr[Boolean] = js.native
  /**
    * Remove attributes when value matches default
    * @default false
    */
  var removeRedundantAttributes: js.UndefOr[Boolean] = js.native
  /**
    * Remove `type="text/javascript"` from `script` tags. Other `type` attribute values are left intact
    * @default false
    */
  var removeScriptTypeAttributes: js.UndefOr[Boolean] = js.native
  /**
    * Remove `type="text/css"` from `style` and `link` tags. Other `type` attribute values are left intact
    * @default false
    */
  var removeStyleLinkTypeAttributes: js.UndefOr[Boolean] = js.native
  /**
    * Remove space between attributes whenever possible. **Note that this will result in invalid HTML!**
    * @default false
    */
  var removeTagWhitespace: js.UndefOr[Boolean] = js.native
  /**
    * Sort attributes by frequency
    * @default false
    */
  var sortAttributes: js.UndefOr[Boolean] = js.native
  /**
    * Sort style classes by frequency
    * @default false
    */
  var sortClassName: js.UndefOr[Boolean] = js.native
  /**
    * Trim white space around `ignoreCustomFragments`
    * @default false
    */
  var trimCustomFragments: js.UndefOr[Boolean] = js.native
  /**
    * Replaces the `doctype` with the short (HTML5) doctype
    * @default false
    */
  var useShortDoctype: js.UndefOr[Boolean] = js.native
}

object Options {
  @scala.inline
  def apply(): Options = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Options]
  }
  @scala.inline
  implicit class OptionsOps[Self <: Options] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withCaseSensitive(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("caseSensitive")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCaseSensitive: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("caseSensitive")(js.undefined)
        ret
    }
    @scala.inline
    def withCollapseBooleanAttributes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseBooleanAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCollapseBooleanAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseBooleanAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withCollapseInlineTagWhitespace(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseInlineTagWhitespace")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCollapseInlineTagWhitespace: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseInlineTagWhitespace")(js.undefined)
        ret
    }
    @scala.inline
    def withCollapseWhitespace(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseWhitespace")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCollapseWhitespace: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("collapseWhitespace")(js.undefined)
        ret
    }
    @scala.inline
    def withConservativeCollapse(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("conservativeCollapse")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutConservativeCollapse: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("conservativeCollapse")(js.undefined)
        ret
    }
    @scala.inline
    def withContinueOnParseError(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("continueOnParseError")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutContinueOnParseError: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("continueOnParseError")(js.undefined)
        ret
    }
    @scala.inline
    def withCustomAttrAssign(value: js.Array[js.RegExp]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrAssign")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCustomAttrAssign: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrAssign")(js.undefined)
        ret
    }
    @scala.inline
    def withCustomAttrCollapse(value: js.RegExp): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrCollapse")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCustomAttrCollapse: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrCollapse")(js.undefined)
        ret
    }
    @scala.inline
    def withCustomAttrSurround(value: js.Array[js.RegExp]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrSurround")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCustomAttrSurround: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customAttrSurround")(js.undefined)
        ret
    }
    @scala.inline
    def withCustomEventAttributes(value: js.Array[js.RegExp]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customEventAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCustomEventAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("customEventAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withDecodeEntities(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("decodeEntities")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDecodeEntities: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("decodeEntities")(js.undefined)
        ret
    }
    @scala.inline
    def withHtml5(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("html5")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutHtml5: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("html5")(js.undefined)
        ret
    }
    @scala.inline
    def withIgnoreCustomComments(value: js.Array[js.RegExp]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreCustomComments")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIgnoreCustomComments: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreCustomComments")(js.undefined)
        ret
    }
    @scala.inline
    def withIgnoreCustomFragments(value: js.Array[js.RegExp]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreCustomFragments")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIgnoreCustomFragments: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreCustomFragments")(js.undefined)
        ret
    }
    @scala.inline
    def withIncludeAutoGeneratedTags(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("includeAutoGeneratedTags")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIncludeAutoGeneratedTags: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("includeAutoGeneratedTags")(js.undefined)
        ret
    }
    @scala.inline
    def withKeepClosingSlash(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("keepClosingSlash")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutKeepClosingSlash: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("keepClosingSlash")(js.undefined)
        ret
    }
    @scala.inline
    def withMaxLineLength(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("maxLineLength")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMaxLineLength: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("maxLineLength")(js.undefined)
        ret
    }
    @scala.inline
    def withMinifyCSSFunction2(value: (/* text */ String, /* type */ js.UndefOr[String]) => String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyCSS")(js.Any.fromFunction2(value))
        ret
    }
    @scala.inline
    def withMinifyCSS(
      value: Boolean | js.Object | (js.Function2[/* text */ String, /* type */ js.UndefOr[String], String])
    ): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyCSS")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMinifyCSS: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyCSS")(js.undefined)
        ret
    }
    @scala.inline
    def withMinifyJSFunction2(value: (/* text */ String, /* inline */ js.UndefOr[Boolean]) => String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyJS")(js.Any.fromFunction2(value))
        ret
    }
    @scala.inline
    def withMinifyJS(
      value: Boolean | js.Object | (js.Function2[/* text */ String, /* inline */ js.UndefOr[Boolean], String])
    ): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyJS")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMinifyJS: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyJS")(js.undefined)
        ret
    }
    @scala.inline
    def withMinifyURLsFunction1(value: /* text */ String => String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyURLs")(js.Any.fromFunction1(value))
        ret
    }
    @scala.inline
    def withMinifyURLs(value: Boolean | String | js.Object | (js.Function1[/* text */ String, String])): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyURLs")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMinifyURLs: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minifyURLs")(js.undefined)
        ret
    }
    @scala.inline
    def withPreserveLineBreaks(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preserveLineBreaks")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPreserveLineBreaks: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preserveLineBreaks")(js.undefined)
        ret
    }
    @scala.inline
    def withPreventAttributesEscaping(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preventAttributesEscaping")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPreventAttributesEscaping: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preventAttributesEscaping")(js.undefined)
        ret
    }
    @scala.inline
    def withProcessConditionalComments(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("processConditionalComments")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutProcessConditionalComments: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("processConditionalComments")(js.undefined)
        ret
    }
    @scala.inline
    def withProcessScripts(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("processScripts")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutProcessScripts: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("processScripts")(js.undefined)
        ret
    }
    @scala.inline
    def withQuoteCharacter(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("quoteCharacter")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutQuoteCharacter: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("quoteCharacter")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveAttributeQuotes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeAttributeQuotes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveAttributeQuotes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeAttributeQuotes")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveComments(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeComments")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveComments: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeComments")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveEmptyAttributesFunction2(value: (/* attrName */ String, /* tag */ String) => Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeEmptyAttributes")(js.Any.fromFunction2(value))
        ret
    }
    @scala.inline
    def withRemoveEmptyAttributes(value: Boolean | (js.Function2[/* attrName */ String, /* tag */ String, Boolean])): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeEmptyAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveEmptyAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeEmptyAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveEmptyElements(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeEmptyElements")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveEmptyElements: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeEmptyElements")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveOptionalTags(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeOptionalTags")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveOptionalTags: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeOptionalTags")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveRedundantAttributes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeRedundantAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveRedundantAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeRedundantAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveScriptTypeAttributes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeScriptTypeAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveScriptTypeAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeScriptTypeAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveStyleLinkTypeAttributes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeStyleLinkTypeAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveStyleLinkTypeAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeStyleLinkTypeAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withRemoveTagWhitespace(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeTagWhitespace")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRemoveTagWhitespace: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("removeTagWhitespace")(js.undefined)
        ret
    }
    @scala.inline
    def withSortAttributes(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortAttributes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSortAttributes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortAttributes")(js.undefined)
        ret
    }
    @scala.inline
    def withSortClassName(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortClassName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSortClassName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortClassName")(js.undefined)
        ret
    }
    @scala.inline
    def withTrimCustomFragments(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("trimCustomFragments")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTrimCustomFragments: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("trimCustomFragments")(js.undefined)
        ret
    }
    @scala.inline
    def withUseShortDoctype(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("useShortDoctype")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutUseShortDoctype: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("useShortDoctype")(js.undefined)
        ret
    }
  }
  
}

