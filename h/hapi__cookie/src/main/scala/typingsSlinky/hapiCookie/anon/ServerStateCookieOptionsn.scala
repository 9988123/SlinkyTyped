package typingsSlinky.hapiCookie.anon

import typingsSlinky.hapiCookie.hapiCookieStrings.base64
import typingsSlinky.hapiCookie.hapiCookieStrings.base64json
import typingsSlinky.hapiCookie.hapiCookieStrings.form
import typingsSlinky.hapiCookie.hapiCookieStrings.iron
import typingsSlinky.hapiCookie.hapiCookieStrings.none
import typingsSlinky.hapiHapi.anon.Integrity
import typingsSlinky.hapiHapi.mod.Request
import typingsSlinky.hapiHapi.mod.SameSitePolicy
import typingsSlinky.hapiIron.mod.SealOptions
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* Inlined @hapi/hapi.@hapi/hapi.ServerStateCookieOptions & {  name  :string} */
@js.native
trait ServerStateCookieOptionsn extends js.Object {
  /**
    * if present and the cookie was not received from the client or explicitly set by the route handler, the
    * cookie is automatically added to the response with the provided value. The value can be
    * a function with signature async function(request) where:
    */
  var autoValue: js.UndefOr[js.Function1[/* request */ Request, Unit]] = js.native
  /** if true, automatically instruct the client to remove invalid cookies. Defaults to false. */
  var clearInvalid: js.UndefOr[Boolean] = js.native
  /** the domain scope. Defaults to null (no domain). */
  var domain: js.UndefOr[String | Null] = js.native
  /**
    * encoding performs on the provided value before serialization. Options are:
    *  * 'none' - no encoding. When used, the cookie value must be a string. This is the default value.
    *  * 'base64' - string value is encoded using Base64.
    *  * 'base64json' - object value is JSON-stringified then encoded using Base64.
    *  * 'form' - object value is encoded using the x-www-form-urlencoded method.
    *  * 'iron' - Encrypts and sign the value using iron.
    */
  var encoding: js.UndefOr[none | base64 | base64json | form | iron] = js.native
  /** if true, errors are ignored and treated as missing cookies. */
  var ignoreErrors: js.UndefOr[Boolean] = js.native
  /** options for 'iron' encoding. Defaults to require('@hapi/iron').defaults. */
  var iron: js.UndefOr[SealOptions] = js.native
  /** sets the 'HttpOnly' flag. Defaults to true. */
  var isHttpOnly: js.UndefOr[Boolean] = js.native
  /**
    * sets the 'SameSite' flag. The value must be one of:
    *  * false - no flag.
    *  * 'Strict' - sets the value to 'Strict' (this is the default value).
    *  * 'Lax' - sets the value to 'Lax'.
    */
  var isSameSite: js.UndefOr[SameSitePolicy] = js.native
  /** sets the 'Secure' flag. Defaults to true. */
  var isSecure: js.UndefOr[Boolean] = js.native
  var name: String = js.native
  /** used by proxy plugins (e.g. h2o2). */
  var passThrough: js.UndefOr[js.Any] = js.native
  /** password used for 'iron' encoding (must be at least 32 characters long). */
  var password: js.UndefOr[String] = js.native
  /** the path scope. Defaults to null (no path). */
  var path: js.UndefOr[String | Null] = js.native
  /**
    * an object used to calculate an HMAC for cookie integrity validation. This does not provide privacy, only a mean
    * to verify that the cookie value was generated by the server. Redundant when 'iron' encoding is used. Options are:
    *  * integrity - algorithm options. Defaults to require('@hapi/iron').defaults.integrity.
    *  * password - password used for HMAC key generation (must be at least 32 characters long).
    */
  var sign: js.UndefOr[Integrity] = js.native
  /** if false, allows any cookie value including values in violation of RFC 6265. Defaults to true. */
  var strictHeader: js.UndefOr[Boolean] = js.native
  /** time-to-live in milliseconds. Defaults to null (session time-life - cookies are deleted when the browser is closed). */
  var ttl: js.UndefOr[Double | Null] = js.native
}

object ServerStateCookieOptionsn {
  @scala.inline
  def apply(name: String): ServerStateCookieOptionsn = {
    val __obj = js.Dynamic.literal(name = name.asInstanceOf[js.Any])
    __obj.asInstanceOf[ServerStateCookieOptionsn]
  }
  @scala.inline
  implicit class ServerStateCookieOptionsnOps[Self <: ServerStateCookieOptionsn] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withAutoValue(value: /* request */ Request => Unit): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("autoValue")(js.Any.fromFunction1(value))
        ret
    }
    @scala.inline
    def withoutAutoValue: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("autoValue")(js.undefined)
        ret
    }
    @scala.inline
    def withClearInvalid(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("clearInvalid")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutClearInvalid: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("clearInvalid")(js.undefined)
        ret
    }
    @scala.inline
    def withDomain(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("domain")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDomain: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("domain")(js.undefined)
        ret
    }
    @scala.inline
    def withDomainNull: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("domain")(null)
        ret
    }
    @scala.inline
    def withEncoding(value: none | base64 | base64json | form | iron): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("encoding")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutEncoding: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("encoding")(js.undefined)
        ret
    }
    @scala.inline
    def withIgnoreErrors(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreErrors")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIgnoreErrors: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ignoreErrors")(js.undefined)
        ret
    }
    @scala.inline
    def withIron(value: SealOptions): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("iron")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIron: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("iron")(js.undefined)
        ret
    }
    @scala.inline
    def withIsHttpOnly(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isHttpOnly")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIsHttpOnly: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isHttpOnly")(js.undefined)
        ret
    }
    @scala.inline
    def withIsSameSite(value: SameSitePolicy): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isSameSite")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIsSameSite: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isSameSite")(js.undefined)
        ret
    }
    @scala.inline
    def withIsSecure(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isSecure")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIsSecure: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isSecure")(js.undefined)
        ret
    }
    @scala.inline
    def withPassThrough(value: js.Any): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("passThrough")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPassThrough: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("passThrough")(js.undefined)
        ret
    }
    @scala.inline
    def withPassword(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("password")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPassword: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("password")(js.undefined)
        ret
    }
    @scala.inline
    def withPath(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("path")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPath: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("path")(js.undefined)
        ret
    }
    @scala.inline
    def withPathNull: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("path")(null)
        ret
    }
    @scala.inline
    def withSign(value: Integrity): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sign")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSign: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sign")(js.undefined)
        ret
    }
    @scala.inline
    def withStrictHeader(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("strictHeader")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStrictHeader: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("strictHeader")(js.undefined)
        ret
    }
    @scala.inline
    def withTtl(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ttl")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTtl: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ttl")(js.undefined)
        ret
    }
    @scala.inline
    def withTtlNull: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ttl")(null)
        ret
    }
  }
  
}

