package typingsSlinky.reactDom.testUtilsMod

import org.scalajs.dom.raw.Element
import slinky.core.ReactComponentClass
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@JSImport("react-dom/test-utils", "Simulate")
@js.native
object Simulate extends js.Object {
  def abort(element: ReactComponentClass[_]): Unit = js.native
  def abort(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def abort(element: Element): Unit = js.native
  def abort(element: Element, eventData: SyntheticEventData): Unit = js.native
  def animationEnd(element: ReactComponentClass[_]): Unit = js.native
  def animationEnd(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def animationEnd(element: Element): Unit = js.native
  def animationEnd(element: Element, eventData: SyntheticEventData): Unit = js.native
  def animationIteration(element: ReactComponentClass[_]): Unit = js.native
  def animationIteration(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def animationIteration(element: Element): Unit = js.native
  def animationIteration(element: Element, eventData: SyntheticEventData): Unit = js.native
  def animationStart(element: ReactComponentClass[_]): Unit = js.native
  def animationStart(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def animationStart(element: Element): Unit = js.native
  def animationStart(element: Element, eventData: SyntheticEventData): Unit = js.native
  def blur(element: ReactComponentClass[_]): Unit = js.native
  def blur(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def blur(element: Element): Unit = js.native
  def blur(element: Element, eventData: SyntheticEventData): Unit = js.native
  def canPlay(element: ReactComponentClass[_]): Unit = js.native
  def canPlay(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def canPlay(element: Element): Unit = js.native
  def canPlay(element: Element, eventData: SyntheticEventData): Unit = js.native
  def canPlayThrough(element: ReactComponentClass[_]): Unit = js.native
  def canPlayThrough(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def canPlayThrough(element: Element): Unit = js.native
  def canPlayThrough(element: Element, eventData: SyntheticEventData): Unit = js.native
  def change(element: ReactComponentClass[_]): Unit = js.native
  def change(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def change(element: Element): Unit = js.native
  def change(element: Element, eventData: SyntheticEventData): Unit = js.native
  def click(element: ReactComponentClass[_]): Unit = js.native
  def click(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def click(element: Element): Unit = js.native
  def click(element: Element, eventData: SyntheticEventData): Unit = js.native
  def compositionEnd(element: ReactComponentClass[_]): Unit = js.native
  def compositionEnd(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def compositionEnd(element: Element): Unit = js.native
  def compositionEnd(element: Element, eventData: SyntheticEventData): Unit = js.native
  def compositionStart(element: ReactComponentClass[_]): Unit = js.native
  def compositionStart(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def compositionStart(element: Element): Unit = js.native
  def compositionStart(element: Element, eventData: SyntheticEventData): Unit = js.native
  def compositionUpdate(element: ReactComponentClass[_]): Unit = js.native
  def compositionUpdate(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def compositionUpdate(element: Element): Unit = js.native
  def compositionUpdate(element: Element, eventData: SyntheticEventData): Unit = js.native
  def contextMenu(element: ReactComponentClass[_]): Unit = js.native
  def contextMenu(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def contextMenu(element: Element): Unit = js.native
  def contextMenu(element: Element, eventData: SyntheticEventData): Unit = js.native
  def copy(element: ReactComponentClass[_]): Unit = js.native
  def copy(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def copy(element: Element): Unit = js.native
  def copy(element: Element, eventData: SyntheticEventData): Unit = js.native
  def cut(element: ReactComponentClass[_]): Unit = js.native
  def cut(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def cut(element: Element): Unit = js.native
  def cut(element: Element, eventData: SyntheticEventData): Unit = js.native
  def doubleClick(element: ReactComponentClass[_]): Unit = js.native
  def doubleClick(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def doubleClick(element: Element): Unit = js.native
  def doubleClick(element: Element, eventData: SyntheticEventData): Unit = js.native
  def drag(element: ReactComponentClass[_]): Unit = js.native
  def drag(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def drag(element: Element): Unit = js.native
  def drag(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragEnd(element: ReactComponentClass[_]): Unit = js.native
  def dragEnd(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragEnd(element: Element): Unit = js.native
  def dragEnd(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragEnter(element: ReactComponentClass[_]): Unit = js.native
  def dragEnter(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragEnter(element: Element): Unit = js.native
  def dragEnter(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragExit(element: ReactComponentClass[_]): Unit = js.native
  def dragExit(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragExit(element: Element): Unit = js.native
  def dragExit(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragLeave(element: ReactComponentClass[_]): Unit = js.native
  def dragLeave(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragLeave(element: Element): Unit = js.native
  def dragLeave(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragOver(element: ReactComponentClass[_]): Unit = js.native
  def dragOver(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragOver(element: Element): Unit = js.native
  def dragOver(element: Element, eventData: SyntheticEventData): Unit = js.native
  def dragStart(element: ReactComponentClass[_]): Unit = js.native
  def dragStart(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def dragStart(element: Element): Unit = js.native
  def dragStart(element: Element, eventData: SyntheticEventData): Unit = js.native
  def drop(element: ReactComponentClass[_]): Unit = js.native
  def drop(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def drop(element: Element): Unit = js.native
  def drop(element: Element, eventData: SyntheticEventData): Unit = js.native
  def durationChange(element: ReactComponentClass[_]): Unit = js.native
  def durationChange(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def durationChange(element: Element): Unit = js.native
  def durationChange(element: Element, eventData: SyntheticEventData): Unit = js.native
  def emptied(element: ReactComponentClass[_]): Unit = js.native
  def emptied(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def emptied(element: Element): Unit = js.native
  def emptied(element: Element, eventData: SyntheticEventData): Unit = js.native
  def encrypted(element: ReactComponentClass[_]): Unit = js.native
  def encrypted(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def encrypted(element: Element): Unit = js.native
  def encrypted(element: Element, eventData: SyntheticEventData): Unit = js.native
  def ended(element: ReactComponentClass[_]): Unit = js.native
  def ended(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def ended(element: Element): Unit = js.native
  def ended(element: Element, eventData: SyntheticEventData): Unit = js.native
  def error(element: ReactComponentClass[_]): Unit = js.native
  def error(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def error(element: Element): Unit = js.native
  def error(element: Element, eventData: SyntheticEventData): Unit = js.native
  def focus(element: ReactComponentClass[_]): Unit = js.native
  def focus(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def focus(element: Element): Unit = js.native
  def focus(element: Element, eventData: SyntheticEventData): Unit = js.native
  def input(element: ReactComponentClass[_]): Unit = js.native
  def input(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def input(element: Element): Unit = js.native
  def input(element: Element, eventData: SyntheticEventData): Unit = js.native
  def invalid(element: ReactComponentClass[_]): Unit = js.native
  def invalid(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def invalid(element: Element): Unit = js.native
  def invalid(element: Element, eventData: SyntheticEventData): Unit = js.native
  def keyDown(element: ReactComponentClass[_]): Unit = js.native
  def keyDown(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def keyDown(element: Element): Unit = js.native
  def keyDown(element: Element, eventData: SyntheticEventData): Unit = js.native
  def keyPress(element: ReactComponentClass[_]): Unit = js.native
  def keyPress(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def keyPress(element: Element): Unit = js.native
  def keyPress(element: Element, eventData: SyntheticEventData): Unit = js.native
  def keyUp(element: ReactComponentClass[_]): Unit = js.native
  def keyUp(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def keyUp(element: Element): Unit = js.native
  def keyUp(element: Element, eventData: SyntheticEventData): Unit = js.native
  def load(element: ReactComponentClass[_]): Unit = js.native
  def load(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def load(element: Element): Unit = js.native
  def load(element: Element, eventData: SyntheticEventData): Unit = js.native
  def loadStart(element: ReactComponentClass[_]): Unit = js.native
  def loadStart(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def loadStart(element: Element): Unit = js.native
  def loadStart(element: Element, eventData: SyntheticEventData): Unit = js.native
  def loadedData(element: ReactComponentClass[_]): Unit = js.native
  def loadedData(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def loadedData(element: Element): Unit = js.native
  def loadedData(element: Element, eventData: SyntheticEventData): Unit = js.native
  def loadedMetadata(element: ReactComponentClass[_]): Unit = js.native
  def loadedMetadata(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def loadedMetadata(element: Element): Unit = js.native
  def loadedMetadata(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseDown(element: ReactComponentClass[_]): Unit = js.native
  def mouseDown(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseDown(element: Element): Unit = js.native
  def mouseDown(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseEnter(element: ReactComponentClass[_]): Unit = js.native
  def mouseEnter(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseEnter(element: Element): Unit = js.native
  def mouseEnter(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseLeave(element: ReactComponentClass[_]): Unit = js.native
  def mouseLeave(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseLeave(element: Element): Unit = js.native
  def mouseLeave(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseMove(element: ReactComponentClass[_]): Unit = js.native
  def mouseMove(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseMove(element: Element): Unit = js.native
  def mouseMove(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseOut(element: ReactComponentClass[_]): Unit = js.native
  def mouseOut(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseOut(element: Element): Unit = js.native
  def mouseOut(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseOver(element: ReactComponentClass[_]): Unit = js.native
  def mouseOver(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseOver(element: Element): Unit = js.native
  def mouseOver(element: Element, eventData: SyntheticEventData): Unit = js.native
  def mouseUp(element: ReactComponentClass[_]): Unit = js.native
  def mouseUp(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def mouseUp(element: Element): Unit = js.native
  def mouseUp(element: Element, eventData: SyntheticEventData): Unit = js.native
  def paste(element: ReactComponentClass[_]): Unit = js.native
  def paste(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def paste(element: Element): Unit = js.native
  def paste(element: Element, eventData: SyntheticEventData): Unit = js.native
  def pause(element: ReactComponentClass[_]): Unit = js.native
  def pause(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def pause(element: Element): Unit = js.native
  def pause(element: Element, eventData: SyntheticEventData): Unit = js.native
  def play(element: ReactComponentClass[_]): Unit = js.native
  def play(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def play(element: Element): Unit = js.native
  def play(element: Element, eventData: SyntheticEventData): Unit = js.native
  def playing(element: ReactComponentClass[_]): Unit = js.native
  def playing(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def playing(element: Element): Unit = js.native
  def playing(element: Element, eventData: SyntheticEventData): Unit = js.native
  def progress(element: ReactComponentClass[_]): Unit = js.native
  def progress(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def progress(element: Element): Unit = js.native
  def progress(element: Element, eventData: SyntheticEventData): Unit = js.native
  def rateChange(element: ReactComponentClass[_]): Unit = js.native
  def rateChange(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def rateChange(element: Element): Unit = js.native
  def rateChange(element: Element, eventData: SyntheticEventData): Unit = js.native
  def scroll(element: ReactComponentClass[_]): Unit = js.native
  def scroll(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def scroll(element: Element): Unit = js.native
  def scroll(element: Element, eventData: SyntheticEventData): Unit = js.native
  def seeked(element: ReactComponentClass[_]): Unit = js.native
  def seeked(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def seeked(element: Element): Unit = js.native
  def seeked(element: Element, eventData: SyntheticEventData): Unit = js.native
  def seeking(element: ReactComponentClass[_]): Unit = js.native
  def seeking(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def seeking(element: Element): Unit = js.native
  def seeking(element: Element, eventData: SyntheticEventData): Unit = js.native
  def select(element: ReactComponentClass[_]): Unit = js.native
  def select(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def select(element: Element): Unit = js.native
  def select(element: Element, eventData: SyntheticEventData): Unit = js.native
  def stalled(element: ReactComponentClass[_]): Unit = js.native
  def stalled(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def stalled(element: Element): Unit = js.native
  def stalled(element: Element, eventData: SyntheticEventData): Unit = js.native
  def submit(element: ReactComponentClass[_]): Unit = js.native
  def submit(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def submit(element: Element): Unit = js.native
  def submit(element: Element, eventData: SyntheticEventData): Unit = js.native
  def suspend(element: ReactComponentClass[_]): Unit = js.native
  def suspend(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def suspend(element: Element): Unit = js.native
  def suspend(element: Element, eventData: SyntheticEventData): Unit = js.native
  def timeUpdate(element: ReactComponentClass[_]): Unit = js.native
  def timeUpdate(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def timeUpdate(element: Element): Unit = js.native
  def timeUpdate(element: Element, eventData: SyntheticEventData): Unit = js.native
  def touchCancel(element: ReactComponentClass[_]): Unit = js.native
  def touchCancel(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def touchCancel(element: Element): Unit = js.native
  def touchCancel(element: Element, eventData: SyntheticEventData): Unit = js.native
  def touchEnd(element: ReactComponentClass[_]): Unit = js.native
  def touchEnd(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def touchEnd(element: Element): Unit = js.native
  def touchEnd(element: Element, eventData: SyntheticEventData): Unit = js.native
  def touchMove(element: ReactComponentClass[_]): Unit = js.native
  def touchMove(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def touchMove(element: Element): Unit = js.native
  def touchMove(element: Element, eventData: SyntheticEventData): Unit = js.native
  def touchStart(element: ReactComponentClass[_]): Unit = js.native
  def touchStart(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def touchStart(element: Element): Unit = js.native
  def touchStart(element: Element, eventData: SyntheticEventData): Unit = js.native
  def transitionEnd(element: ReactComponentClass[_]): Unit = js.native
  def transitionEnd(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def transitionEnd(element: Element): Unit = js.native
  def transitionEnd(element: Element, eventData: SyntheticEventData): Unit = js.native
  def volumeChange(element: ReactComponentClass[_]): Unit = js.native
  def volumeChange(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def volumeChange(element: Element): Unit = js.native
  def volumeChange(element: Element, eventData: SyntheticEventData): Unit = js.native
  def waiting(element: ReactComponentClass[_]): Unit = js.native
  def waiting(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def waiting(element: Element): Unit = js.native
  def waiting(element: Element, eventData: SyntheticEventData): Unit = js.native
  def wheel(element: ReactComponentClass[_]): Unit = js.native
  def wheel(element: ReactComponentClass[_], eventData: SyntheticEventData): Unit = js.native
  def wheel(element: Element): Unit = js.native
  def wheel(element: Element, eventData: SyntheticEventData): Unit = js.native
}

