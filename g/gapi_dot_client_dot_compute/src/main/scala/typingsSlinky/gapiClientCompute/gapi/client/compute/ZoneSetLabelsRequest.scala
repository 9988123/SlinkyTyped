package typingsSlinky.gapiClientCompute.gapi.client.compute

import typingsSlinky.std.Record
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait ZoneSetLabelsRequest extends js.Object {
  /**
    * The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and
    * changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    * Make a get() request to the resource to get the latest fingerprint.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  /** The labels to set for this resource. */
  var labels: js.UndefOr[Record[String, String]] = js.native
}

object ZoneSetLabelsRequest {
  @scala.inline
  def apply(): ZoneSetLabelsRequest = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ZoneSetLabelsRequest]
  }
  @scala.inline
  implicit class ZoneSetLabelsRequestOps[Self <: ZoneSetLabelsRequest] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withLabelFingerprint(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labelFingerprint")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLabelFingerprint: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labelFingerprint")(js.undefined)
        ret
    }
    @scala.inline
    def withLabels(value: Record[String, String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labels")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLabels: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labels")(js.undefined)
        ret
    }
  }
  
}

