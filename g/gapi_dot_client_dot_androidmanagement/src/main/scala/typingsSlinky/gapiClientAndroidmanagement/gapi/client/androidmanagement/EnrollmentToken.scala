package typingsSlinky.gapiClientAndroidmanagement.gapi.client.androidmanagement

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait EnrollmentToken extends js.Object {
  /**
    * Optional, arbitrary data associated with the enrollment token. This could contain, for example, the id of an org unit to which the device is assigned
    * after enrollment. After a device enrolls with the token, this data will be exposed in the enrollment_token_data field of the Device resource. The data
    * must be 1024 characters or less; otherwise, the creation request will fail.
    */
  var additionalData: js.UndefOr[String] = js.native
  /** The duration of the token. If not specified, the duration will be 1 hour. The allowed range is 1 minute to 30 days. */
  var duration: js.UndefOr[String] = js.native
  /** The expiration time of the token. This is a read-only field generated by the server. */
  var expirationTimestamp: js.UndefOr[String] = js.native
  /**
    * The name of the enrollment token, which is generated by the server during creation, in the form
    * enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}
    */
  var name: js.UndefOr[String] = js.native
  /**
    * The name of the policy that will be initially applied to the enrolled device in the form enterprises/{enterpriseId}/policies/{policyId}. If not
    * specified, the policy with id default is applied. It is permissible to only specify the policyId when updating this field as long as the policyId
    * contains no slashes since the rest of the policy name can be inferred from context.
    */
  var policyName: js.UndefOr[String] = js.native
  /**
    * A JSON string whose UTF-8 representation can be used to generate a QR code to enroll a device with this enrollment token. To enroll a device using NFC,
    * the NFC record must contain a serialized java.util.Properties representation of the properties in the JSON.
    */
  var qrCode: js.UndefOr[String] = js.native
  /** The token value which is passed to the device and authorizes the device to enroll. This is a read-only field generated by the server. */
  var value: js.UndefOr[String] = js.native
}

object EnrollmentToken {
  @scala.inline
  def apply(): EnrollmentToken = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[EnrollmentToken]
  }
  @scala.inline
  implicit class EnrollmentTokenOps[Self <: EnrollmentToken] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAdditionalData(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("additionalData")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAdditionalData: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("additionalData")(js.undefined)
        ret
    }
    @scala.inline
    def withDuration(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("duration")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDuration: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("duration")(js.undefined)
        ret
    }
    @scala.inline
    def withExpirationTimestamp(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("expirationTimestamp")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutExpirationTimestamp: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("expirationTimestamp")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withPolicyName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("policyName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPolicyName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("policyName")(js.undefined)
        ret
    }
    @scala.inline
    def withQrCode(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("qrCode")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutQrCode: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("qrCode")(js.undefined)
        ret
    }
    @scala.inline
    def withValue(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("value")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutValue: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("value")(js.undefined)
        ret
    }
  }
  
}

