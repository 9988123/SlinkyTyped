package typingsSlinky.googleapis.vaultV1Mod.vaultV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Represents a matter.
  */
@js.native
trait SchemaMatter extends js.Object {
  /**
    * The description of the matter.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * The matter ID which is generated by the server. Should be blank when
    * creating a new matter.
    */
  var matterId: js.UndefOr[String] = js.native
  /**
    * List of users and access to the matter. Currently there is no programmer
    * defined limit on the number of permissions a matter can have.
    */
  var matterPermissions: js.UndefOr[js.Array[SchemaMatterPermission]] = js.native
  /**
    * The name of the matter.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * The state of the matter.
    */
  var state: js.UndefOr[String] = js.native
}

object SchemaMatter {
  @scala.inline
  def apply(): SchemaMatter = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaMatter]
  }
  @scala.inline
  implicit class SchemaMatterOps[Self <: SchemaMatter] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withDescription(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("description")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDescription: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("description")(js.undefined)
        ret
    }
    @scala.inline
    def withMatterId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("matterId")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMatterId: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("matterId")(js.undefined)
        ret
    }
    @scala.inline
    def withMatterPermissions(value: js.Array[SchemaMatterPermission]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("matterPermissions")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMatterPermissions: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("matterPermissions")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withState(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("state")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutState: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("state")(js.undefined)
        ret
    }
  }
  
}

