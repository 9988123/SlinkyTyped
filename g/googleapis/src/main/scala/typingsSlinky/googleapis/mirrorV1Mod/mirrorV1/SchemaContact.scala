package typingsSlinky.googleapis.mirrorV1Mod.mirrorV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A person or group that can be used as a creator or a contact.
  */
@js.native
trait SchemaContact extends js.Object {
  /**
    * A list of voice menu commands that a contact can handle. Glass shows up
    * to three contacts for each voice menu command. If there are more than
    * that, the three contacts with the highest priority are shown for that
    * particular command.
    */
  var acceptCommands: js.UndefOr[js.Array[SchemaCommand]] = js.native
  /**
    * A list of MIME types that a contact supports. The contact will be shown
    * to the user if any of its acceptTypes matches any of the types of the
    * attachments on the item. If no acceptTypes are given, the contact will be
    * shown for all items.
    */
  var acceptTypes: js.UndefOr[js.Array[String]] = js.native
  /**
    * The name to display for this contact.
    */
  var displayName: js.UndefOr[String] = js.native
  /**
    * An ID for this contact. This is generated by the application and is
    * treated as an opaque token.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * Set of image URLs to display for a contact. Most contacts will have a
    * single image, but a &quot;group&quot; contact may include up to 8 image
    * URLs and they will be resized and cropped into a mosaic on the client.
    */
  var imageUrls: js.UndefOr[js.Array[String]] = js.native
  /**
    * The type of resource. This is always mirror#contact.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * Primary phone number for the contact. This can be a fully-qualified
    * number, with country calling code and area code, or a local number.
    */
  var phoneNumber: js.UndefOr[String] = js.native
  /**
    * Priority for the contact to determine ordering in a list of contacts.
    * Contacts with higher priorities will be shown before ones with lower
    * priorities.
    */
  var priority: js.UndefOr[Double] = js.native
  /**
    * A list of sharing features that a contact can handle. Allowed values are:
    * - ADD_CAPTION
    */
  var sharingFeatures: js.UndefOr[js.Array[String]] = js.native
  /**
    * The ID of the application that created this contact. This is populated by
    * the API
    */
  var source: js.UndefOr[String] = js.native
  /**
    * Name of this contact as it should be pronounced. If this contact&#39;s
    * name must be spoken as part of a voice disambiguation menu, this name is
    * used as the expected pronunciation. This is useful for contact names with
    * unpronounceable characters or whose display spelling is otherwise not
    * phonetic.
    */
  var speakableName: js.UndefOr[String] = js.native
  /**
    * The type for this contact. This is used for sorting in UIs. Allowed
    * values are:   - INDIVIDUAL - Represents a single person. This is the
    * default.  - GROUP - Represents more than a single person.
    */
  var `type`: js.UndefOr[String] = js.native
}

object SchemaContact {
  @scala.inline
  def apply(): SchemaContact = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaContact]
  }
  @scala.inline
  implicit class SchemaContactOps[Self <: SchemaContact] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAcceptCommands(value: js.Array[SchemaCommand]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("acceptCommands")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAcceptCommands: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("acceptCommands")(js.undefined)
        ret
    }
    @scala.inline
    def withAcceptTypes(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("acceptTypes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAcceptTypes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("acceptTypes")(js.undefined)
        ret
    }
    @scala.inline
    def withDisplayName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDisplayName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayName")(js.undefined)
        ret
    }
    @scala.inline
    def withId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutId: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(js.undefined)
        ret
    }
    @scala.inline
    def withImageUrls(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("imageUrls")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutImageUrls: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("imageUrls")(js.undefined)
        ret
    }
    @scala.inline
    def withKind(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutKind: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(js.undefined)
        ret
    }
    @scala.inline
    def withPhoneNumber(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("phoneNumber")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPhoneNumber: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("phoneNumber")(js.undefined)
        ret
    }
    @scala.inline
    def withPriority(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("priority")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPriority: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("priority")(js.undefined)
        ret
    }
    @scala.inline
    def withSharingFeatures(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sharingFeatures")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSharingFeatures: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sharingFeatures")(js.undefined)
        ret
    }
    @scala.inline
    def withSource(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("source")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSource: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("source")(js.undefined)
        ret
    }
    @scala.inline
    def withSpeakableName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("speakableName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSpeakableName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("speakableName")(js.undefined)
        ret
    }
    @scala.inline
    def withType(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("type")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutType: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("type")(js.undefined)
        ret
    }
  }
  
}

