package typingsSlinky.googleapis.websecurityscannerV1alphaMod.websecurityscannerV1alpha

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A ScanConfig resource contains the configurations to launch a scan. next
  * id: 12
  */
@js.native
trait SchemaScanConfig extends js.Object {
  /**
    * The authentication configuration. If specified, service will use the
    * authentication configuration during scanning.
    */
  var authentication: js.UndefOr[SchemaAuthentication] = js.native
  /**
    * The blacklist URL patterns as described in
    * https://cloud.google.com/security-scanner/docs/excluded-urls
    */
  var blacklistPatterns: js.UndefOr[js.Array[String]] = js.native
  /**
    * Required. The user provided display name of the ScanConfig.
    */
  var displayName: js.UndefOr[String] = js.native
  /**
    * Latest ScanRun if available.
    */
  var latestRun: js.UndefOr[SchemaScanRun] = js.native
  /**
    * The maximum QPS during scanning. A valid value ranges from 5 to 20
    * inclusively. If the field is unspecified or its value is set 0, server
    * will default to 15. Other values outside of [5, 20] range will be
    * rejected with INVALID_ARGUMENT error.
    */
  var maxQps: js.UndefOr[Double] = js.native
  /**
    * The resource name of the ScanConfig. The name follows the format of
    * &#39;projects/{projectId}/scanConfigs/{scanConfigId}&#39;. The ScanConfig
    * IDs are generated by the system.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * The schedule of the ScanConfig.
    */
  var schedule: js.UndefOr[SchemaSchedule] = js.native
  /**
    * Required. The starting URLs from which the scanner finds site pages.
    */
  var startingUrls: js.UndefOr[js.Array[String]] = js.native
  /**
    * Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be
    * used as a default.
    */
  var targetPlatforms: js.UndefOr[js.Array[String]] = js.native
  /**
    * The user agent used during scanning.
    */
  var userAgent: js.UndefOr[String] = js.native
}

object SchemaScanConfig {
  @scala.inline
  def apply(): SchemaScanConfig = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaScanConfig]
  }
  @scala.inline
  implicit class SchemaScanConfigOps[Self <: SchemaScanConfig] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAuthentication(value: SchemaAuthentication): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("authentication")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAuthentication: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("authentication")(js.undefined)
        ret
    }
    @scala.inline
    def withBlacklistPatterns(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("blacklistPatterns")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutBlacklistPatterns: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("blacklistPatterns")(js.undefined)
        ret
    }
    @scala.inline
    def withDisplayName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDisplayName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayName")(js.undefined)
        ret
    }
    @scala.inline
    def withLatestRun(value: SchemaScanRun): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("latestRun")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLatestRun: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("latestRun")(js.undefined)
        ret
    }
    @scala.inline
    def withMaxQps(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("maxQps")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMaxQps: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("maxQps")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withSchedule(value: SchemaSchedule): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("schedule")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSchedule: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("schedule")(js.undefined)
        ret
    }
    @scala.inline
    def withStartingUrls(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("startingUrls")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStartingUrls: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("startingUrls")(js.undefined)
        ret
    }
    @scala.inline
    def withTargetPlatforms(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("targetPlatforms")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTargetPlatforms: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("targetPlatforms")(js.undefined)
        ret
    }
    @scala.inline
    def withUserAgent(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("userAgent")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutUserAgent: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("userAgent")(js.undefined)
        ret
    }
  }
  
}

