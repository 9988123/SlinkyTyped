package typingsSlinky.googleapis.androidmanagementV1Mod.androidmanagementV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * An enrollment token.
  */
@js.native
trait SchemaEnrollmentToken extends js.Object {
  /**
    * Optional, arbitrary data associated with the enrollment token. This could
    * contain, for example, the ID of an org unit the device is assigned to
    * after enrollment. After a device enrolls with the token, this data will
    * be exposed in the enrollment_token_data field of the Device resource. The
    * data must be 1024 characters or less; otherwise, the creation request
    * will fail.
    */
  var additionalData: js.UndefOr[String] = js.native
  /**
    * The length of time the enrollment token is valid, ranging from 1 minute
    * to 30 days. If not specified, the default duration is 1 hour.
    */
  var duration: js.UndefOr[String] = js.native
  /**
    * The expiration time of the token. This is a read-only field generated by
    * the server.
    */
  var expirationTimestamp: js.UndefOr[String] = js.native
  /**
    * The name of the enrollment token, which is generated by the server during
    * creation, in the form
    * enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * Whether the enrollment token is for one time use only. If the flag is set
    * to true, only one device can use it for registration.
    */
  var oneTimeOnly: js.UndefOr[Boolean] = js.native
  /**
    * The name of the policy initially applied to the enrolled device, in the
    * form enterprises/{enterpriseId}/policies/{policyId}. If not specified,
    * the policy_name for the device’s user is applied. If user_name is also
    * not specified, enterprises/{enterpriseId}/policies/default is applied by
    * default. When updating this field, you can specify only the policyId as
    * long as the policyId doesn’t contain any slashes. The rest of the policy
    * name will be inferred.
    */
  var policyName: js.UndefOr[String] = js.native
  /**
    * A JSON string whose UTF-8 representation can be used to generate a QR
    * code to enroll a device with this enrollment token. To enroll a device
    * using NFC, the NFC record must contain a serialized java.util.Properties
    * representation of the properties in the JSON.
    */
  var qrCode: js.UndefOr[String] = js.native
  /**
    * The user associated with this enrollment token. If it&#39;s specified
    * when the enrollment token is created and the user does not exist, the
    * user will be created. This field must not contain personally identifiable
    * information. Only the account_identifier field needs to be set.
    */
  var user: js.UndefOr[SchemaUser] = js.native
  /**
    * The token value that&#39;s passed to the device and authorizes the device
    * to enroll. This is a read-only field generated by the server.
    */
  var value: js.UndefOr[String] = js.native
}

object SchemaEnrollmentToken {
  @scala.inline
  def apply(): SchemaEnrollmentToken = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaEnrollmentToken]
  }
  @scala.inline
  implicit class SchemaEnrollmentTokenOps[Self <: SchemaEnrollmentToken] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAdditionalData(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("additionalData")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAdditionalData: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("additionalData")(js.undefined)
        ret
    }
    @scala.inline
    def withDuration(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("duration")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDuration: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("duration")(js.undefined)
        ret
    }
    @scala.inline
    def withExpirationTimestamp(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("expirationTimestamp")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutExpirationTimestamp: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("expirationTimestamp")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withOneTimeOnly(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("oneTimeOnly")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutOneTimeOnly: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("oneTimeOnly")(js.undefined)
        ret
    }
    @scala.inline
    def withPolicyName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("policyName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPolicyName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("policyName")(js.undefined)
        ret
    }
    @scala.inline
    def withQrCode(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("qrCode")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutQrCode: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("qrCode")(js.undefined)
        ret
    }
    @scala.inline
    def withUser(value: SchemaUser): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("user")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutUser: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("user")(js.undefined)
        ret
    }
    @scala.inline
    def withValue(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("value")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutValue: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("value")(js.undefined)
        ret
    }
  }
  
}

