package typingsSlinky.googleapis.androidmanagementV1Mod.androidmanagementV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * The configuration applied to an enterprise.
  */
@js.native
trait SchemaEnterprise extends js.Object {
  /**
    * Deprecated and unused.
    */
  var appAutoApprovalEnabled: js.UndefOr[Boolean] = js.native
  /**
    * The types of Google Pub/Sub notifications enabled for the enterprise.
    */
  var enabledNotificationTypes: js.UndefOr[js.Array[String]] = js.native
  /**
    * The name of the enterprise displayed to users.
    */
  var enterpriseDisplayName: js.UndefOr[String] = js.native
  /**
    * An image displayed as a logo during device provisioning. Supported types
    * are: image/bmp, image/gif, image/x-ico, image/jpeg, image/png,
    * image/webp, image/vnd.wap.wbmp, image/x-adobe-dng.
    */
  var logo: js.UndefOr[SchemaExternalData] = js.native
  /**
    * The name of the enterprise which is generated by the server during
    * creation, in the form enterprises/{enterpriseId}.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * A color in RGB format that indicates the predominant color to display in
    * the device management app UI. The color components are stored as follows:
    * (red &lt;&lt; 16) | (green &lt;&lt; 8) | blue, where the value of each
    * component is between 0 and 255, inclusive.
    */
  var primaryColor: js.UndefOr[Double] = js.native
  /**
    * The topic that Cloud Pub/Sub notifications are published to, in the form
    * projects/{project}/topics/{topic}. This field is only required if Pub/Sub
    * notifications are enabled.
    */
  var pubsubTopic: js.UndefOr[String] = js.native
  /**
    * Sign-in details of the enterprise. Maximum of 1 SigninDetail is
    * supported.
    */
  var signinDetails: js.UndefOr[js.Array[SchemaSigninDetail]] = js.native
  /**
    * Terms and conditions that must be accepted when provisioning a device for
    * this enterprise. A page of terms is generated for each value in this
    * list.
    */
  var termsAndConditions: js.UndefOr[js.Array[SchemaTermsAndConditions]] = js.native
}

object SchemaEnterprise {
  @scala.inline
  def apply(): SchemaEnterprise = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaEnterprise]
  }
  @scala.inline
  implicit class SchemaEnterpriseOps[Self <: SchemaEnterprise] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAppAutoApprovalEnabled(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("appAutoApprovalEnabled")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAppAutoApprovalEnabled: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("appAutoApprovalEnabled")(js.undefined)
        ret
    }
    @scala.inline
    def withEnabledNotificationTypes(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("enabledNotificationTypes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutEnabledNotificationTypes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("enabledNotificationTypes")(js.undefined)
        ret
    }
    @scala.inline
    def withEnterpriseDisplayName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("enterpriseDisplayName")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutEnterpriseDisplayName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("enterpriseDisplayName")(js.undefined)
        ret
    }
    @scala.inline
    def withLogo(value: SchemaExternalData): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("logo")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLogo: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("logo")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withPrimaryColor(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("primaryColor")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPrimaryColor: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("primaryColor")(js.undefined)
        ret
    }
    @scala.inline
    def withPubsubTopic(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("pubsubTopic")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPubsubTopic: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("pubsubTopic")(js.undefined)
        ret
    }
    @scala.inline
    def withSigninDetails(value: js.Array[SchemaSigninDetail]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("signinDetails")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSigninDetails: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("signinDetails")(js.undefined)
        ret
    }
    @scala.inline
    def withTermsAndConditions(value: js.Array[SchemaTermsAndConditions]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("termsAndConditions")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTermsAndConditions: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("termsAndConditions")(js.undefined)
        ret
    }
  }
  
}

