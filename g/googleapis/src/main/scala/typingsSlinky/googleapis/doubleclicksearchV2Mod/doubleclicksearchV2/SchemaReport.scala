package typingsSlinky.googleapis.doubleclicksearchV2Mod.doubleclicksearchV2

import typingsSlinky.googleapis.AnonByteCount
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A DoubleClick Search report. This object contains the report request, some
  * report metadata such as currency code, and the generated report rows or
  * report files.
  */
@js.native
trait SchemaReport extends js.Object {
  /**
    * Asynchronous report only. Contains a list of generated report files once
    * the report has succesfully completed.
    */
  var files: js.UndefOr[js.Array[AnonByteCount]] = js.native
  /**
    * Asynchronous report only. Id of the report.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * Asynchronous report only. True if and only if the report has completed
    * successfully and the report files are ready to be downloaded.
    */
  var isReportReady: js.UndefOr[Boolean] = js.native
  /**
    * Identifies this as a Report resource. Value: the fixed string
    * doubleclicksearch#report.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * The request that created the report. Optional fields not specified in the
    * original request are filled with default values.
    */
  var request: js.UndefOr[SchemaReportRequest] = js.native
  /**
    * The number of report rows generated by the report, not including headers.
    */
  var rowCount: js.UndefOr[Double] = js.native
  /**
    * Synchronous report only. Generated report rows.
    */
  var rows: js.UndefOr[js.Array[SchemaReportRow]] = js.native
  /**
    * The currency code of all monetary values produced in the report,
    * including values that are set by users (e.g., keyword bid settings) and
    * metrics (e.g., cost and revenue). The currency code of a report is
    * determined by the statisticsCurrency field of the report request.
    */
  var statisticsCurrencyCode: js.UndefOr[String] = js.native
  /**
    * If all statistics of the report are sourced from the same time zone, this
    * would be it. Otherwise the field is unset.
    */
  var statisticsTimeZone: js.UndefOr[String] = js.native
}

object SchemaReport {
  @scala.inline
  def apply(): SchemaReport = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaReport]
  }
  @scala.inline
  implicit class SchemaReportOps[Self <: SchemaReport] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withFiles(value: js.Array[AnonByteCount]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("files")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutFiles: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("files")(js.undefined)
        ret
    }
    @scala.inline
    def withId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutId: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(js.undefined)
        ret
    }
    @scala.inline
    def withIsReportReady(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isReportReady")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutIsReportReady: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("isReportReady")(js.undefined)
        ret
    }
    @scala.inline
    def withKind(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutKind: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(js.undefined)
        ret
    }
    @scala.inline
    def withRequest(value: SchemaReportRequest): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("request")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRequest: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("request")(js.undefined)
        ret
    }
    @scala.inline
    def withRowCount(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("rowCount")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRowCount: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("rowCount")(js.undefined)
        ret
    }
    @scala.inline
    def withRows(value: js.Array[SchemaReportRow]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("rows")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRows: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("rows")(js.undefined)
        ret
    }
    @scala.inline
    def withStatisticsCurrencyCode(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statisticsCurrencyCode")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStatisticsCurrencyCode: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statisticsCurrencyCode")(js.undefined)
        ret
    }
    @scala.inline
    def withStatisticsTimeZone(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statisticsTimeZone")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStatisticsTimeZone: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statisticsTimeZone")(js.undefined)
        ret
    }
  }
  
}

