package typingsSlinky.googleapis.alphaMod.computeAlpha

import org.scalablytyped.runtime.StringDictionary
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * An Instance resource. (== resource_for beta.instances ==) (== resource_for
  * v1.instances ==)
  */
@js.native
trait SchemaInstance extends js.Object {
  /**
    * Allows this instance to send and receive packets with non-matching
    * destination or source IPs. This is required if you plan to use this
    * instance to forward routes. For more information, see Enabling IP
    * Forwarding.
    */
  var canIpForward: js.UndefOr[Boolean] = js.native
  /**
    * [Output Only] The CPU platform used by this instance.
    */
  var cpuPlatform: js.UndefOr[String] = js.native
  /**
    * [Output Only] Creation timestamp in RFC3339 text format.
    */
  var creationTimestamp: js.UndefOr[String] = js.native
  /**
    * Whether the resource should be protected against deletion.
    */
  var deletionProtection: js.UndefOr[Boolean] = js.native
  /**
    * An optional description of this resource. Provide this property when you
    * create the resource.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * Array of disks associated with this instance. Persistent disks must be
    * created before you can assign them.
    */
  var disks: js.UndefOr[js.Array[SchemaAttachedDisk]] = js.native
  /**
    * Enables display device for the instance.
    */
  var displayDevice: js.UndefOr[SchemaDisplayDevice] = js.native
  /**
    * A list of the type and count of accelerator cards attached to the
    * instance.
    */
  var guestAccelerators: js.UndefOr[js.Array[SchemaAcceleratorConfig]] = js.native
  var hostname: js.UndefOr[String] = js.native
  /**
    * [Output Only] The unique identifier for the resource. This identifier is
    * defined by the server.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * Encrypts or decrypts data for an instance with a customer-supplied
    * encryption key.  If you are creating a new instance, this field encrypts
    * the local SSD and in-memory contents of the instance using a key that you
    * provide.  If you are restarting an instance protected with a
    * customer-supplied encryption key, you must provide the correct key in
    * order to successfully restart the instance.  If you do not provide an
    * encryption key when creating the instance, then the local SSD and
    * in-memory contents will be encrypted using an automatically generated key
    * and you do not need to provide a key to start the instance later.
    * Instance templates do not store customer-supplied encryption keys, so you
    * cannot use your own keys to encrypt local SSDs and in-memory content in a
    * managed instance group.
    */
  var instanceEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.native
  /**
    * [Output Only] Type of the resource. Always compute#instance for
    * instances.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * A fingerprint for this request, which is essentially a hash of the
    * label&#39;s contents and used for optimistic locking. The fingerprint is
    * initially generated by Compute Engine and changes after every request to
    * modify or update labels. You must always provide an up-to-date
    * fingerprint hash in order to update or change labels.  To see the latest
    * fingerprint, make get() request to the instance.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  /**
    * Labels to apply to this instance. These can be later modified by the
    * setLabels method.
    */
  var labels: js.UndefOr[StringDictionary[String]] = js.native
  /**
    * Full or partial URL of the machine type resource to use for this
    * instance, in the format: zones/zone/machineTypes/machine-type. This is
    * provided by the client when the instance is created. For example, the
    * following is a valid partial url to a predefined machine type:
    * zones/us-central1-f/machineTypes/n1-standard-1   To create a custom
    * machine type, provide a URL to a machine type in the following format,
    * where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and
    * MEMORY is the total memory for this instance. Memory must be a multiple
    * of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
    * zones/zone/machineTypes/custom-CPUS-MEMORY   For example:
    * zones/us-central1-f/machineTypes/custom-4-5120   For a full list of
    * restrictions, read the Specifications for custom machine types.
    */
  var machineType: js.UndefOr[String] = js.native
  /**
    * The metadata key/value pairs assigned to this instance. This includes
    * custom metadata and predefined keys.
    */
  var metadata: js.UndefOr[SchemaMetadata] = js.native
  /**
    * Specifies a minimum CPU platform for the VM instance. Applicable values
    * are the friendly names of CPU platforms, such as minCpuPlatform:
    * &quot;Intel Haswell&quot; or minCpuPlatform: &quot;Intel Sandy
    * Bridge&quot;.
    */
  var minCpuPlatform: js.UndefOr[String] = js.native
  /**
    * The name of the resource, provided by the client when initially creating
    * the resource. The resource name must be 1-63 characters long, and comply
    * with RFC1035. Specifically, the name must be 1-63 characters long and
    * match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
    * first character must be a lowercase letter, and all following characters
    * must be a dash, lowercase letter, or digit, except the last character,
    * which cannot be a dash.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * An array of network configurations for this instance. These specify how
    * interfaces are configured to interact with other network services, such
    * as connecting to the internet. Multiple interfaces are supported per
    * instance.
    */
  var networkInterfaces: js.UndefOr[js.Array[SchemaNetworkInterface]] = js.native
  /**
    * Total amount of preserved state for SUSPENDED instances. Read-only in the
    * api.
    */
  var preservedStateSizeGb: js.UndefOr[String] = js.native
  /**
    * The configuration of desired allocations which this Instance could
    * consume capacity from.
    */
  var reservationAffinity: js.UndefOr[SchemaReservationAffinity] = js.native
  /**
    * Resource policies applied to this instance.
    */
  var resourcePolicies: js.UndefOr[js.Array[String]] = js.native
  /**
    * Sets the scheduling options for this instance.
    */
  var scheduling: js.UndefOr[SchemaScheduling] = js.native
  /**
    * [Output Only] Server-defined URL for this resource.
    */
  var selfLink: js.UndefOr[String] = js.native
  /**
    * [Output Only] Server-defined URL for this resource with the resource id.
    */
  var selfLinkWithId: js.UndefOr[String] = js.native
  /**
    * A list of service accounts, with their specified scopes, authorized for
    * this instance. Only one service account per VM instance is supported.
    * Service accounts generate access tokens that can be accessed through the
    * metadata server and used to authenticate applications on the instance.
    * See Service Accounts for more information.
    */
  var serviceAccounts: js.UndefOr[js.Array[SchemaServiceAccount]] = js.native
  var shieldedInstanceConfig: js.UndefOr[SchemaShieldedInstanceConfig] = js.native
  var shieldedInstanceIntegrityPolicy: js.UndefOr[SchemaShieldedInstanceIntegrityPolicy] = js.native
  var shieldedVmConfig: js.UndefOr[SchemaShieldedVmConfig] = js.native
  var shieldedVmIntegrityPolicy: js.UndefOr[SchemaShieldedVmIntegrityPolicy] = js.native
  /**
    * Source machine image
    */
  var sourceMachineImage: js.UndefOr[String] = js.native
  /**
    * Source GMI encryption key when creating an instance from GMI.
    */
  var sourceMachineImageEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.native
  /**
    * [Output Only] Whether a VM has been restricted for start because Compute
    * Engine has detected suspicious activity.
    */
  var startRestricted: js.UndefOr[Boolean] = js.native
  /**
    * [Output Only] The status of the instance. One of the following values:
    * PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED,
    * and TERMINATED.
    */
  var status: js.UndefOr[String] = js.native
  /**
    * [Output Only] An optional, human-readable explanation of the status.
    */
  var statusMessage: js.UndefOr[String] = js.native
  /**
    * Tags to apply to this instance. Tags are used to identify valid sources
    * or targets for network firewalls and are specified by the client during
    * instance creation. The tags can be later modified by the setTags method.
    * Each tag within the list must comply with RFC1035. Multiple tags can be
    * specified via the &#39;tags.items&#39; field.
    */
  var tags: js.UndefOr[SchemaTags] = js.native
  /**
    * [Output Only] URL of the zone where the instance resides. You must
    * specify this field as part of the HTTP request URL. It is not settable as
    * a field in the request body.
    */
  var zone: js.UndefOr[String] = js.native
}

object SchemaInstance {
  @scala.inline
  def apply(): SchemaInstance = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaInstance]
  }
  @scala.inline
  implicit class SchemaInstanceOps[Self <: SchemaInstance] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withCanIpForward(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("canIpForward")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCanIpForward: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("canIpForward")(js.undefined)
        ret
    }
    @scala.inline
    def withCpuPlatform(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("cpuPlatform")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCpuPlatform: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("cpuPlatform")(js.undefined)
        ret
    }
    @scala.inline
    def withCreationTimestamp(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("creationTimestamp")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutCreationTimestamp: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("creationTimestamp")(js.undefined)
        ret
    }
    @scala.inline
    def withDeletionProtection(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("deletionProtection")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDeletionProtection: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("deletionProtection")(js.undefined)
        ret
    }
    @scala.inline
    def withDescription(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("description")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDescription: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("description")(js.undefined)
        ret
    }
    @scala.inline
    def withDisks(value: js.Array[SchemaAttachedDisk]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("disks")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDisks: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("disks")(js.undefined)
        ret
    }
    @scala.inline
    def withDisplayDevice(value: SchemaDisplayDevice): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayDevice")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutDisplayDevice: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("displayDevice")(js.undefined)
        ret
    }
    @scala.inline
    def withGuestAccelerators(value: js.Array[SchemaAcceleratorConfig]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("guestAccelerators")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutGuestAccelerators: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("guestAccelerators")(js.undefined)
        ret
    }
    @scala.inline
    def withHostname(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("hostname")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutHostname: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("hostname")(js.undefined)
        ret
    }
    @scala.inline
    def withId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutId: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(js.undefined)
        ret
    }
    @scala.inline
    def withInstanceEncryptionKey(value: SchemaCustomerEncryptionKey): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("instanceEncryptionKey")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutInstanceEncryptionKey: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("instanceEncryptionKey")(js.undefined)
        ret
    }
    @scala.inline
    def withKind(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutKind: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("kind")(js.undefined)
        ret
    }
    @scala.inline
    def withLabelFingerprint(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labelFingerprint")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLabelFingerprint: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labelFingerprint")(js.undefined)
        ret
    }
    @scala.inline
    def withLabels(value: StringDictionary[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labels")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutLabels: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("labels")(js.undefined)
        ret
    }
    @scala.inline
    def withMachineType(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("machineType")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMachineType: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("machineType")(js.undefined)
        ret
    }
    @scala.inline
    def withMetadata(value: SchemaMetadata): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("metadata")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMetadata: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("metadata")(js.undefined)
        ret
    }
    @scala.inline
    def withMinCpuPlatform(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minCpuPlatform")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutMinCpuPlatform: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("minCpuPlatform")(js.undefined)
        ret
    }
    @scala.inline
    def withName(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutName: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("name")(js.undefined)
        ret
    }
    @scala.inline
    def withNetworkInterfaces(value: js.Array[SchemaNetworkInterface]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("networkInterfaces")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutNetworkInterfaces: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("networkInterfaces")(js.undefined)
        ret
    }
    @scala.inline
    def withPreservedStateSizeGb(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preservedStateSizeGb")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPreservedStateSizeGb: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("preservedStateSizeGb")(js.undefined)
        ret
    }
    @scala.inline
    def withReservationAffinity(value: SchemaReservationAffinity): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("reservationAffinity")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutReservationAffinity: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("reservationAffinity")(js.undefined)
        ret
    }
    @scala.inline
    def withResourcePolicies(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("resourcePolicies")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutResourcePolicies: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("resourcePolicies")(js.undefined)
        ret
    }
    @scala.inline
    def withScheduling(value: SchemaScheduling): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("scheduling")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutScheduling: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("scheduling")(js.undefined)
        ret
    }
    @scala.inline
    def withSelfLink(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("selfLink")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSelfLink: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("selfLink")(js.undefined)
        ret
    }
    @scala.inline
    def withSelfLinkWithId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("selfLinkWithId")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSelfLinkWithId: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("selfLinkWithId")(js.undefined)
        ret
    }
    @scala.inline
    def withServiceAccounts(value: js.Array[SchemaServiceAccount]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("serviceAccounts")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutServiceAccounts: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("serviceAccounts")(js.undefined)
        ret
    }
    @scala.inline
    def withShieldedInstanceConfig(value: SchemaShieldedInstanceConfig): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedInstanceConfig")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutShieldedInstanceConfig: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedInstanceConfig")(js.undefined)
        ret
    }
    @scala.inline
    def withShieldedInstanceIntegrityPolicy(value: SchemaShieldedInstanceIntegrityPolicy): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedInstanceIntegrityPolicy")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutShieldedInstanceIntegrityPolicy: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedInstanceIntegrityPolicy")(js.undefined)
        ret
    }
    @scala.inline
    def withShieldedVmConfig(value: SchemaShieldedVmConfig): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedVmConfig")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutShieldedVmConfig: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedVmConfig")(js.undefined)
        ret
    }
    @scala.inline
    def withShieldedVmIntegrityPolicy(value: SchemaShieldedVmIntegrityPolicy): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedVmIntegrityPolicy")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutShieldedVmIntegrityPolicy: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("shieldedVmIntegrityPolicy")(js.undefined)
        ret
    }
    @scala.inline
    def withSourceMachineImage(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sourceMachineImage")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSourceMachineImage: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sourceMachineImage")(js.undefined)
        ret
    }
    @scala.inline
    def withSourceMachineImageEncryptionKey(value: SchemaCustomerEncryptionKey): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sourceMachineImageEncryptionKey")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSourceMachineImageEncryptionKey: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sourceMachineImageEncryptionKey")(js.undefined)
        ret
    }
    @scala.inline
    def withStartRestricted(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("startRestricted")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStartRestricted: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("startRestricted")(js.undefined)
        ret
    }
    @scala.inline
    def withStatus(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("status")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStatus: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("status")(js.undefined)
        ret
    }
    @scala.inline
    def withStatusMessage(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statusMessage")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutStatusMessage: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("statusMessage")(js.undefined)
        ret
    }
    @scala.inline
    def withTags(value: SchemaTags): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("tags")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTags: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("tags")(js.undefined)
        ret
    }
    @scala.inline
    def withZone(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("zone")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutZone: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("zone")(js.undefined)
        ret
    }
  }
  
}

