package typingsSlinky.awsSdkClientCodecommitNode.deleteBranchExceptionsUnionMod

import typingsSlinky.awsSdkClientCodecommitNode.typesBranchNameRequiredExceptionMod.BranchNameRequiredException
import typingsSlinky.awsSdkClientCodecommitNode.typesDefaultBranchCannotBeDeletedExceptionMod.DefaultBranchCannotBeDeletedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidBranchNameExceptionMod.InvalidBranchNameException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryDoesNotExistExceptionMod.RepositoryDoesNotExistException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* Rewritten from type alias, can be one of: 
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryDoesNotExistExceptionMod.RepositoryDoesNotExistException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
  - typingsSlinky.awsSdkClientCodecommitNode.typesBranchNameRequiredExceptionMod.BranchNameRequiredException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidBranchNameExceptionMod.InvalidBranchNameException
  - typingsSlinky.awsSdkClientCodecommitNode.typesDefaultBranchCannotBeDeletedExceptionMod.DefaultBranchCannotBeDeletedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
*/
trait DeleteBranchExceptionsUnion extends js.Object

object DeleteBranchExceptionsUnion {
  @scala.inline
  implicit def apply(value: BranchNameRequiredException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: DefaultBranchCannotBeDeletedException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionIntegrityChecksFailedException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyAccessDeniedException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyDisabledException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyNotFoundException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyUnavailableException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidBranchNameException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidRepositoryNameException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryDoesNotExistException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryNameRequiredException): DeleteBranchExceptionsUnion = value.asInstanceOf[DeleteBranchExceptionsUnion]
}

