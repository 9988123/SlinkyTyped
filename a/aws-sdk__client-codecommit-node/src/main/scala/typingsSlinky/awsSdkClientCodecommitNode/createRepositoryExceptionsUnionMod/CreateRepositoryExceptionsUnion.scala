package typingsSlinky.awsSdkClientCodecommitNode.createRepositoryExceptionsUnionMod

import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryDescriptionExceptionMod.InvalidRepositoryDescriptionException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryLimitExceededExceptionMod.RepositoryLimitExceededException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameExistsExceptionMod.RepositoryNameExistsException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* Rewritten from type alias, can be one of: 
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameExistsExceptionMod.RepositoryNameExistsException
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryDescriptionExceptionMod.InvalidRepositoryDescriptionException
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryLimitExceededExceptionMod.RepositoryLimitExceededException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
*/
trait CreateRepositoryExceptionsUnion extends js.Object

object CreateRepositoryExceptionsUnion {
  @scala.inline
  implicit def apply(value: EncryptionIntegrityChecksFailedException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyAccessDeniedException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyDisabledException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyNotFoundException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyUnavailableException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidRepositoryDescriptionException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidRepositoryNameException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryLimitExceededException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryNameExistsException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryNameRequiredException): CreateRepositoryExceptionsUnion = value.asInstanceOf[CreateRepositoryExceptionsUnion]
}

