package typingsSlinky.awsSdkClientCodecommitNode.getCommentsForComparedCommitExceptionsUnionMod

import typingsSlinky.awsSdkClientCodecommitNode.typesCommitDoesNotExistExceptionMod.CommitDoesNotExistException
import typingsSlinky.awsSdkClientCodecommitNode.typesCommitIdRequiredExceptionMod.CommitIdRequiredException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
import typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidCommitIdExceptionMod.InvalidCommitIdException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidContinuationTokenExceptionMod.InvalidContinuationTokenException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidMaxResultsExceptionMod.InvalidMaxResultsException
import typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryDoesNotExistExceptionMod.RepositoryDoesNotExistException
import typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* Rewritten from type alias, can be one of: 
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryNameRequiredExceptionMod.RepositoryNameRequiredException
  - typingsSlinky.awsSdkClientCodecommitNode.typesRepositoryDoesNotExistExceptionMod.RepositoryDoesNotExistException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidRepositoryNameExceptionMod.InvalidRepositoryNameException
  - typingsSlinky.awsSdkClientCodecommitNode.typesCommitIdRequiredExceptionMod.CommitIdRequiredException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidCommitIdExceptionMod.InvalidCommitIdException
  - typingsSlinky.awsSdkClientCodecommitNode.typesCommitDoesNotExistExceptionMod.CommitDoesNotExistException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidMaxResultsExceptionMod.InvalidMaxResultsException
  - typingsSlinky.awsSdkClientCodecommitNode.typesInvalidContinuationTokenExceptionMod.InvalidContinuationTokenException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionIntegrityChecksFailedExceptionMod.EncryptionIntegrityChecksFailedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyAccessDeniedExceptionMod.EncryptionKeyAccessDeniedException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyDisabledExceptionMod.EncryptionKeyDisabledException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyNotFoundExceptionMod.EncryptionKeyNotFoundException
  - typingsSlinky.awsSdkClientCodecommitNode.typesEncryptionKeyUnavailableExceptionMod.EncryptionKeyUnavailableException
*/
trait GetCommentsForComparedCommitExceptionsUnion extends js.Object

object GetCommentsForComparedCommitExceptionsUnion {
  @scala.inline
  implicit def apply(value: CommitDoesNotExistException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: CommitIdRequiredException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionIntegrityChecksFailedException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyAccessDeniedException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyDisabledException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyNotFoundException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: EncryptionKeyUnavailableException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidCommitIdException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidContinuationTokenException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidMaxResultsException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: InvalidRepositoryNameException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryDoesNotExistException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
  @scala.inline
  implicit def apply(value: RepositoryNameRequiredException): GetCommentsForComparedCommitExceptionsUnion = value.asInstanceOf[GetCommentsForComparedCommitExceptionsUnion]
}

