package typingsSlinky.dynatable.JQueryDynatable

import org.scalajs.dom.raw.Element
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait Column extends js.Object {
  var hidden: Boolean = js.native
  /**
    * Determined by the `data-dynatable-column` or using the `defaultColumnIdStyle`
    *
    * @example
    * // Using the `defaultColumnIdStyle` of `camelCase`
    * // `<th>Favorite Music</th>` would be translated into the id `favoriteMusic`
    */
  var id: String = js.native
  var index: Double = js.native
  var label: String = js.native
  /** List of ids for sorting, generated by the plugin, can be tweaked by using `data-dynatable-sorts` */
  var sorts: js.Array[String] = js.native
  /**
    * Detected internally by dynatable.
    * Possible values are:
    *
    * @enum('left', 'right', 'center', 'justify', 'initial', 'inherit')
    */
  var textAlign: String = js.native
  /**
    * Function that interprets the cell html data in order to convert it into data
    *
    * @param cell A html node of the target cell
    * @param record A data object representing the current line of data
    * @return the html content for the current cell
    *
    * @example
    * function exampleAttributeReader(cell, record) {
    *     return $(cell).html();
    * };
    */
  def attributeReader(cell: Element, record: js.Any): String = js.native
  /**
    * Function that returns the cell data to be written inside the cell
    *
    * @param record A data object representing the current line of data
    * @return The data for the current cell
    *
    * @example
    * function exampleAttributeWriter(record) {
    *     return record[this.id];
    * };
    */
  def attributeWriter(record: js.Any): js.Any = js.native
}

object Column {
  @scala.inline
  def apply(
    attributeReader: (Element, js.Any) => String,
    attributeWriter: js.Any => js.Any,
    hidden: Boolean,
    id: String,
    index: Double,
    label: String,
    sorts: js.Array[String],
    textAlign: String
  ): Column = {
    val __obj = js.Dynamic.literal(attributeReader = js.Any.fromFunction2(attributeReader), attributeWriter = js.Any.fromFunction1(attributeWriter), hidden = hidden.asInstanceOf[js.Any], id = id.asInstanceOf[js.Any], index = index.asInstanceOf[js.Any], label = label.asInstanceOf[js.Any], sorts = sorts.asInstanceOf[js.Any], textAlign = textAlign.asInstanceOf[js.Any])
    __obj.asInstanceOf[Column]
  }
  @scala.inline
  implicit class ColumnOps[Self <: Column] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAttributeReader(value: (Element, js.Any) => String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("attributeReader")(js.Any.fromFunction2(value))
        ret
    }
    @scala.inline
    def withAttributeWriter(value: js.Any => js.Any): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("attributeWriter")(js.Any.fromFunction1(value))
        ret
    }
    @scala.inline
    def withHidden(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("hidden")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withId(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("id")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withIndex(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("index")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withLabel(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("label")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withSorts(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sorts")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withTextAlign(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("textAlign")(value.asInstanceOf[js.Any])
        ret
    }
  }
  
}

