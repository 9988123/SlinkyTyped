package typingsSlinky.dynatable.JQueryDynatable

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait Dataset extends js.Object {
  /**
    * Enable the `ajax` mode
    *
    * @default false
    */
  var ajax: js.UndefOr[Boolean] = js.native
  /**
    * Defining the `cache` setting for the jQuery's ajax call...
    * true or false for dataType 'script' and 'jsonp'
    *
    * @default null
    * @see http://api.jquery.com/jQuery.ajax
    */
  var ajaxCache: js.UndefOr[Boolean] = js.native
  /**
    * The type of data that you're expecting back from the server.
    * If none is specified, jQuery will try to infer it based on the MIME type of the response...
    *
    * @enum('xml', 'html', 'script', 'json', 'jsonp', 'text')
    * @default 'json'
    * @see http://api.jquery.com/jQuery.ajax
    */
  var ajaxDataType: js.UndefOr[String] = js.native
  /**
    * Defining the `method` setting for the jQuery's ajax call...
    * The HTTP method to use for the request (e.g. "POST", "GET", "PUT").
    *
    * @enum('GET', 'POST')
    * @default 'GET'
    * @todo Check if other methods could be used... ('GET', 'PUT', 'HEAD', 'POST', 'PATCH', 'TRACE', 'DELETE', 'CONNECT', 'OPTIONS', 'IS_AWARE', 'IS_EAGER', 'PROPFIND', 'IS_OPTIONAL', 'IS_REQUIRED', 'IS_CONSTRUCTOR', 'IS_INSTANTIATOR')
    */
  var ajaxMethod: js.UndefOr[String] = js.native
  /**
    * Send the ajax request automatically
    *
    * @default false
    */
  var ajaxOnLoad: js.UndefOr[Boolean] = js.native
  /**
    * A string containing the URL to which the request is sent.
    *
    * @default null
    */
  var ajaxUrl: js.UndefOr[String] = js.native
  /**
    * The page represented in the for the current dataset
    *
    * @default null
    */
  var page: js.UndefOr[Double] = js.native
  /**
    * The default number of items loaded per page
    *
    * @default 10
    */
  var perPageDefault: js.UndefOr[Double] = js.native
  /**
    * The default options available in the perPage menu built by dynatable
    *
    * @default [10,20,50,100]
    */
  var perPageOptions: js.UndefOr[js.Array[Double]] = js.native
  /**
    * Object describing the current request's filtering
    *
    * @default {}
    */
  var queries: js.UndefOr[js.Object] = js.native
  /**
    * Name of the property in the dataset that contains the total number of records for the current query
    *
    * @default null
    */
  var queryRecordCount: js.UndefOr[String] = js.native
  /**
    * The core data (generated or loaded by dynatable)
    *
    * @default null
    */
  var records: js.UndefOr[js.Any] = js.native
  /**
    * The sorting types (generated by dynatable)
    * It will hosts the type of object to sort (string, number, etc.)
    *
    * @default {}
    */
  var sortTypes: js.UndefOr[js.Object] = js.native
  /**
    * Object describing the current request's sorting
    *
    * @default {}
    */
  var sorts: js.UndefOr[js.Object] = js.native
  /**
    * The sorting keys (generated by dynatable)
    *
    * @default null
    */
  var sortsKeys: js.UndefOr[js.Array[String]] = js.native
  /**
    * Name of the property in the dataset that contains the total number of records
    *
    * @default null
    */
  var totalRecordCount: js.UndefOr[String] = js.native
}

object Dataset {
  @scala.inline
  def apply(): Dataset = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Dataset]
  }
  @scala.inline
  implicit class DatasetOps[Self <: Dataset] (val x: Self) extends AnyVal {
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    @scala.inline
    def withAjax(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajax")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjax: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajax")(js.undefined)
        ret
    }
    @scala.inline
    def withAjaxCache(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxCache")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjaxCache: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxCache")(js.undefined)
        ret
    }
    @scala.inline
    def withAjaxDataType(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxDataType")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjaxDataType: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxDataType")(js.undefined)
        ret
    }
    @scala.inline
    def withAjaxMethod(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxMethod")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjaxMethod: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxMethod")(js.undefined)
        ret
    }
    @scala.inline
    def withAjaxOnLoad(value: Boolean): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxOnLoad")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjaxOnLoad: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxOnLoad")(js.undefined)
        ret
    }
    @scala.inline
    def withAjaxUrl(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxUrl")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutAjaxUrl: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("ajaxUrl")(js.undefined)
        ret
    }
    @scala.inline
    def withPage(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("page")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPage: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("page")(js.undefined)
        ret
    }
    @scala.inline
    def withPerPageDefault(value: Double): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("perPageDefault")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPerPageDefault: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("perPageDefault")(js.undefined)
        ret
    }
    @scala.inline
    def withPerPageOptions(value: js.Array[Double]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("perPageOptions")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutPerPageOptions: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("perPageOptions")(js.undefined)
        ret
    }
    @scala.inline
    def withQueries(value: js.Object): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("queries")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutQueries: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("queries")(js.undefined)
        ret
    }
    @scala.inline
    def withQueryRecordCount(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("queryRecordCount")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutQueryRecordCount: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("queryRecordCount")(js.undefined)
        ret
    }
    @scala.inline
    def withRecords(value: js.Any): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("records")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutRecords: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("records")(js.undefined)
        ret
    }
    @scala.inline
    def withSortTypes(value: js.Object): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortTypes")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSortTypes: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortTypes")(js.undefined)
        ret
    }
    @scala.inline
    def withSorts(value: js.Object): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sorts")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSorts: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sorts")(js.undefined)
        ret
    }
    @scala.inline
    def withSortsKeys(value: js.Array[String]): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortsKeys")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutSortsKeys: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("sortsKeys")(js.undefined)
        ret
    }
    @scala.inline
    def withTotalRecordCount(value: String): Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("totalRecordCount")(value.asInstanceOf[js.Any])
        ret
    }
    @scala.inline
    def withoutTotalRecordCount: Self = {
        val ret = this.duplicate
        ret.asInstanceOf[js.Dynamic].updateDynamic("totalRecordCount")(js.undefined)
        ret
    }
  }
  
}

